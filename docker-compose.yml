services:
  # Web service for the Django application
  web:
    build: ./portfolio_project # Tells Docker Compose to build from the new folder
    volumes:
      - ./portfolio_project:/portfolio_project # Mounts the new folder
    ports:
      - "8000:8000" # Maps port 8000 on your host to port 8000 in the container
    env_file:
      - ./.env # Loads environment variables from the .env file for the web service
    environment:
      DJANGO_SETTINGS_MODULE: project.settings # This line is now correct for the nested 'project' module
    depends_on:
      db:
        condition: service_healthy 

  # Database service for PostgreSQL
  db:
    image: postgres:15-alpine # Uses the official PostgreSQL 15 Alpine image
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persistent volume for database data
    env_file:
      - ./.env # Ensures the db service also loads environment variables
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432" # Expose PostgreSQL port (optional for local dev if only 'web' connects)
    healthcheck: # Health check for the database
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Give the database a bit of time to start before checking

# Define named volume for PostgreSQL data persistence
volumes:
  postgres_data:
